name: k6 Test with Publish - Preview & Final

permissions:
  contents: read
  actions: read
  id-token: write

on:
  push:
    tags:
      - 'ReactiveLock-v*.*.*'

  workflow_dispatch:
    inputs:
      version:
        description: "NuGet package version to use"
        required: false
        default: "1.1.0-beta.1"

jobs:
  pack-nupkgs:
    uses: ./.github/workflows/pack-nupkgs.yml
    with:
      version: ${{ inputs.version }}

  run-final-grpc-test:
    needs: pack-nupkgs
    uses: ./.github/workflows/k6-test-single.yml
    with:
      mode: 'final'
      project: 'grpc'

  run-preview-grpc-test:
    needs: pack-nupkgs
    uses: ./.github/workflows/k6-test-single.yml
    with:
      mode: 'preview'
      project: 'grpc'

  run-final-redis-test:
    needs: pack-nupkgs
    uses: ./.github/workflows/k6-test-single.yml
    with:
      mode: 'final'
      project: 'redis'

  run-preview-redis-test:
    needs: pack-nupkgs
    uses: ./.github/workflows/k6-test-single.yml
    with:
      mode: 'preview'
      project: 'redis'

  run-checks:
    needs: 
      - run-final-grpc-test
      - run-preview-grpc-test
      - run-final-redis-test
      - run-preview-redis-test
    uses: ./.github/workflows/k6-test-checks.yml
      
  publish:
    if: ${{ !github.event.inputs.version || github.event.inputs.version == '' }}
    needs: 
      - run-checks
    runs-on: ubuntu-latest
    environment: nuget-publish
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: built-nupkgs
          path: ./nupkgs

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: NuGet login (OIDC â†’ temp API key)
        uses: NuGet/login@v1
        id: login
        with:
          user: ${{ secrets.NUGET_USER }}

      - name: Publish NuGet packages
        env:
          NUGET_API_KEY: ${{ steps.login.outputs.NUGET_API_KEY }}
        run: |
          for pkg in ./nupkgs/*.nupkg; do
            echo "Publishing $pkg..."
            dotnet nuget push "$pkg" \
              --api-key $NUGET_API_KEY \
              --source https://api.nuget.org/v3/index.json \
              --skip-duplicate
          done