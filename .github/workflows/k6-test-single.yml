name: k6 Test - Preview or Final
#  thanks to lukas8219 - https://github.com/lukas8219/rinha-de-backend-2025/blob/main/.github/workflows/test.yaml

on:
  workflow_dispatch:
    inputs:
      mode:
        description: "Select run mode"
        required: true
        default: "preview"
        type: choice
        options:
          - 1- final
          - 2- preview

  workflow_call:
    inputs:
      mode:
        required: true
        type: string
jobs:
  k6-test:
    runs-on: ubuntu-latest
    #permissions: write-all

    strategy:
      matrix:
        run_id: [1, 2, 3]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Download Environment
        run: |  
          curl -l https://raw.githubusercontent.com/micheloliveira-com/rinha-de-backend-2025/refs/heads/main/payment-processor/docker-compose.yml -o docker-compose-payment-processor.yml
          curl -l https://raw.githubusercontent.com/micheloliveira-com/rinha-de-backend-2025/refs/heads/main/rinha-test/requests.js -o requests.js
          curl -l https://raw.githubusercontent.com/micheloliveira-com/rinha-de-backend-2025/refs/heads/main/payment-processor/init.sql -o init.sql

          if [ "${{ github.event.inputs.mode }}" = "2- preview" ]; then
            echo "Downloading PREVIEW rinha.js"
            curl -l https://raw.githubusercontent.com/micheloliveira-com/rinha-de-backend-2025/refs/heads/main/rinha-test/rinha.js -o rinha.js
            echo "MAX_REQUESTS=550" >> $GITHUB_ENV
            echo "RESULTS_FILE=partial-results.json" >> $GITHUB_ENV
          else
            echo "Downloading FINAL rinha.js"
            curl -l https://raw.githubusercontent.com/micheloliveira-com/rinha-de-backend-2025/refs/heads/main/rinha-test/rinha-final.js -o rinha.js
            echo "MAX_REQUESTS=603" >> $GITHUB_ENV
            echo "RESULTS_FILE=final-results.json" >> $GITHUB_ENV
          fi

      - name: Build and start services
        run: docker-compose -f docker-compose-payment-processor.yml up -d

      - name: Build and start services
        run: cd src && docker-compose up -d --build
        
      - name: Wait for nginx to be healthy
        run: |
          # Wait up to 60 attempts (2 minutes)
          for i in {1..60}; do
            STATUS=$(curl -s -o /dev/null -w '%{http_code}' http://localhost:9999/ || true)
            if [ "$STATUS" -eq 200 ]; then
              echo "ok, nginx is up (HTTP 200)"
              exit 0
            fi
            echo "Waiting for nginx... attempt $i/60 (last status: $STATUS)"
            sleep 2
          done
          echo "bad, nginx did not become healthy in time"
          exit 1
          
      - uses: grafana/setup-k6-action@v1

      - name: Run k6 test
        run: k6 -q -e MAX_REQUESTS=${MAX_REQUESTS} run rinha.js

      - name: Upload JSON Results
        uses: actions/upload-artifact@v4
        with:
          name: results-json-${{ matrix.run_id }}
          path: ${{ env.RESULTS_FILE }}
          retention-days: 1
          
      - name: Create Comment MD File
        run: |
          echo "## k6 Test Results" > comment.md
          echo "Hash: ${{ github.sha }}" >> comment.md
          echo "\`\`\`json" >> comment.md
          cat ${RESULTS_FILE} >> comment.md
          echo "\n\`\`\`" >> comment.md

      - name: Append Docker Compose Logs
        run: |
          echo "## Docker Compose Logs" >> comment.md
          echo '```log' >> comment.md
          cd src && docker-compose logs >> ../comment.md || true
          echo '```' >> comment.md

      - name: Echo comment.md contents
        run: cat comment.md

      - name: Upload comment.md as artifact
        uses: actions/upload-artifact@v4
        with:
            name: comment-md-${{ matrix.run_id }}
            path: comment.md
            retention-days: 1
  check-results:
    runs-on: ubuntu-latest
    needs: k6-test

    steps:
      - name: Download all JSON artifacts
        uses: actions/download-artifact@v5
        with:
          path: results

      - name: Validate JSON files
        run: |
          echo "Checking JSON files..."
          for file in $(find results -type f -name '*.json'); do
            echo "Validating $file"
            jq -e '.multa.porcentagem == 0 and .multa.total == 0' "$file" > /dev/null || { echo "Invalid multa in $file"; exit 1; }
            jq -e '.total_liquido > 0' "$file" > /dev/null || { echo "total_liquido <= 0 in $file"; exit 1; }
            echo "$file passed validation"
          done